Subject: stop dealing with pthread_yield on glibc 2.34
From: Katsuhiro Ueno <katsu@ie.niigata-u.ac.jp>
---
--- massivethreads-1.00/configure.ac.orig	2024-09-18 13:47:40.007174871 +0000
+++ massivethreads-1.00/configure.ac	2024-09-18 17:27:45.417287108 +0000
@@ -469,6 +469,17 @@
 	[[ pthread_yield(); ]])],
 	[have_pthread_yield="yes"],
 	[have_pthread_yield="no"])
+if test x"$have_pthread_yield" = "xyes" ; then
+  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
+#define _GNU_SOURCE
+#include <pthread.h>
+int sched_yield(void) {}
+int pthread_yield(void) {}
+]],
+	[[]])],
+	[],
+	[have_pthread_yield="no"])
+fi
 AC_MSG_RESULT([$have_pthread_yield])
 if test x"$have_pthread_yield" = "xyes" ; then
    AC_DEFINE_UNQUOTED([HAVE_PTHREAD_YIELD],[1],
--- massivethreads-1.00/configure.orig	2019-07-17 10:58:11.000000000 +0000
+++ massivethreads-1.00/configure	2024-09-18 20:45:51.064429446 +0000
@@ -6359,6 +6347,30 @@
 fi
 rm -f core conftest.err conftest.$ac_objext \
     conftest$ac_exeext conftest.$ac_ext
+if test x"$have_pthread_yield" = "xyes" ; then
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+#define _GNU_SOURCE
+#include <pthread.h>
+int sched_yield(void) {}
+int pthread_yield(void) {}
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+
+else
+  have_pthread_yield="no"
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $have_pthread_yield" >&5
 $as_echo "$have_pthread_yield" >&6; }
 if test x"$have_pthread_yield" = "xyes" ; then
